{"version":3,"file":"DBEntity.js","sourceRoot":"./src/","sources":["db/DBEntity.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAAiH;AACjH,kCAAmC;AAEnC,MAAa,QAAS,SAAQ,oBAAU;IAOpC,IAAW,YAAY;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;IACtD,CAAC;IAKD,MAAM,CAAC,KAAK,CAAC,MAAM,CAA0C,MAA0C;QACnG,MAAM,GAAG,GAAM,KAAK,CAAC,MAAM,CAAC,MAAa,CAAQ,CAAC;QAClD,GAAG,CAAC,EAAE,GAAG,MAAM,eAAQ,CAAC,SAAS,EAAE,CAAC;QACpC,OAAO,GAAG,CAAC;IACf,CAAC;CACJ;AAjBG;IADC,uBAAa,EAAE;;oCACL;AAGX;IADC,0BAAgB,EAAE;8BACT,IAAI;0CAAC;AAOf;IADC,0BAAgB,EAAE;8BACR,IAAI;2CAAC;AAZpB,4BAmBC","sourcesContent":["import { BaseEntity, PrimaryColumn, ObjectType, DeepPartial, CreateDateColumn, UpdateDateColumn } from \"typeorm\";\nimport { Security } from \"../util\";\n\nexport class DBEntity extends BaseEntity {\n    @PrimaryColumn()\n    id: string;\n\n    @CreateDateColumn()\n    openedOn: Date;\n\n    public get openedOnUnix(): number {\n        return Math.floor(this.openedOn.getTime() / 1000);\n    }\n\n    @UpdateDateColumn()\n    updatedOn: Date;\n\n    static async create<T extends DBEntity>(this: ObjectType<T>, entity?: DeepPartial<T> | DeepPartial<T>[]): Promise<T> {\n        const obj: T = super.create(entity as any) as any;\n        obj.id = await Security.snowflake();\n        return obj;\n    }\n}"]}