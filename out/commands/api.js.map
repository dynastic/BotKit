{"version":3,"file":"api.js","sourceRoot":"./src/","sources":["commands/api.ts"],"names":[],"mappings":"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","sourcesContent":["// This file adds additional functions to Discord.JS prototypes\n\nimport { Collection, Guild, GuildMember, Message, MessageOptions, RichEmbed, User } from 'discord.js';\nimport Constants from '../Constants';\nimport { calculateInclusiveRoles } from '../util';\nimport { CommandError } from './errors';\nimport { PermissionsAPI } from './permissions';\nimport { AccessLevel, CommandUtils } from './util';\n\n\nconst mentionRegex = /⦗<@\\d+>⦘/g;\n\n/**\n * Preserves or adds the user mention string when editing a message\n * @param message the message to modify\n * @param content the new content, if any\n * @param options the options, if any\n */\nconst update: (message: Message, content?: any, options?: MessageOptions) => {content?: any, options?: MessageOptions} = (message, content, options) => {\n    if (!options) options = {};\n    if (typeof content === \"string\") {\n        content = `${content.length > 0 ? `: ${content}` : ''}`;\n    } else {\n        options = content;\n        content = \"\";\n    }\n\n    const match = message.content.match(mentionRegex);\n    const tag = match && match[0] || `⦗<@${message.author.id}>⦘`;\n    content = `${tag}${content}`;\n\n    if (options!.embed) {\n        CommandUtils.specializeEmbed(options!.embed!);\n    }\n\n    return {content, options};\n};\n\nMessage.prototype.reply = function(this: Message, content?: any, options?: MessageOptions) {\n    const patches = update(this, content, options);\n    content = patches.content, options = patches.options;\n\n    return this.channel.send(content, options);\n};\n\nconst oldEdit = Message.prototype.edit;\nMessage.prototype.edit = function(this: Message, content?: any, options?: MessageOptions) {\n    const patches = update(this, content, options);\n    content = patches.content, options = patches.options;\n\n    return oldEdit.call(this, content, options);\n};\n\nMessage.prototype.complete = Message.prototype.success = Message.prototype.done = function(this: Message) {\n    return this.react(Constants.SUCCESS_EMOJI) as any as Promise<void>;\n}\n\nMessage.prototype.warning = Message.prototype.danger = Message.prototype.caution = function(this: Message) {\n    return this.react(Constants.FAIL_EMOJI) as any as Promise<void>;\n}\n\nMessage.prototype.fail = function(this: Message) {\n    return this.react(Constants.FAIL_EMOJI) as any as Promise<void>;\n}\n\nMessage.prototype.renderError = function(this: Message, error) {\n    const {render} = error || CommandError.GENERIC({});\n    Object.defineProperty(this, \"errored\", {\n        value: true,\n        writable: false\n    });\n    return this.reply(typeof render === \"string\" ? render : \"\", {embed: typeof render === \"object\" ? render : undefined}) as any as Promise<void>;\n}\n\nMessage.prototype.data = {};\n\nconst oldSetup = Message.prototype.setup;\nMessage.prototype.setup = function(data) {\n    this.__data = data;\n    return oldSetup.call(this, data);\n}\n\nGuildMember.prototype.hasAccess = async function(this: GuildMember, commandName: string | AccessLevel) {\n    const command = this.client.botkit.commandSystem.commands[commandName];\n\n    if (!command) return false;\n\n    const verify = async (role: \"moderator\" | \"admin\" | \"root\") => {\n        const ROLES_INCLUSIVE = calculateInclusiveRoles();\n\n        if (ROLES_INCLUSIVE[role].includes(this.id)) return true;\n        for (let [,{id}] of this.roles) {\n            if (ROLES_INCLUSIVE[role].includes(id)) return true;\n        }\n        const { roles, id } = this;\n\n        if (this.client.botkit.options.superuserCheck) {\n            if (this.client.botkit.options.superuserCheck(id)) {\n                return true;\n            }\n        }\n\n        const PermissionsEntity = await this.client.botkit.options.permissionsEntity;\n        if (PermissionsEntity && command.opts.node) {\n\n            const roleIDs = roles.map(r => r.id);\n\n            const entities = await PermissionsEntity.createQueryBuilder(\"set\")\n                .where(\"set.roles @> :roleIDs\", { roleIDs })\n                .orWhere(\"set.members @> :id\", { id: [id] })\n                .getMany();\n\n            // create a composite set of all of the permission sets\n            const set = await PermissionsAPI.compositePermissionSet(entities);\n\n            if (PermissionsAPI.nodeSatisfiesSet(command.opts.node, set)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    const access = command.opts.access || AccessLevel.EVERYONE;\n    switch (access) {\n        case AccessLevel.EVERYONE:\n            return true;\n        default:\n            return await verify(access);\n    }\n}\n\nUser.prototype.hasAccess = async function(this: User, commandName: string) {\n    const command = this.client.botkit.commandSystem.commands[commandName];\n    if (!command) return false;\n\n    let access = command.opts.access || AccessLevel.EVERYONE;\n\n    return access === AccessLevel.EVERYONE || !!(this.client.botkit.options.superuserCheck && this.client.botkit.options.superuserCheck(this.id));\n}\n\nUser.prototype.guilds = async function(this: User) {\n    const collection: Collection<string, Guild> = new Collection();\n    for (let [,guild] of this.client.guilds)\n        if (guild.members.has(this.id)) collection.set(this.id, guild);\n    return collection;\n}\n\nRichEmbed.prototype.footer = new Proxy({\n    text: null as any,\n    text_mutated: false,\n    icon_url: null as any,\n    icon_mutated: false\n}, {\n    get(target, key) {\n        if (key === \"text\") {\n            return target.text_mutated ? target.text : Constants.BOT_AUTHOR;\n        }\n        if (key === \"icon_url\") {\n            return target.icon_mutated ? target.icon_url : Constants.BOT_ICON;\n        }\n        return undefined;\n    },\n    set(target, key, value) {\n        target[key] = value;\n        if (key === \"text\") {\n            target.text_mutated = true;\n        }\n        if (key === \"icon_url\") {\n            target.icon_mutated = true;\n        }\n        return true;\n    }\n});"]}