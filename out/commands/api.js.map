{"version":3,"file":"api.js","sourceRoot":"./src/","sources":["commands/api.ts"],"names":[],"mappings":";AAAA,+DAA+D;;AAE/D,2CAAsG;AAGtG,iCAAmD;AACnD,4CAAuG;AACvG,qCAAwC;AAExC,MAAM,YAAY,GAAG,WAAW,CAAC;AAEjC;;;;;GAKG;AACH,MAAM,MAAM,GAA6G,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE;IACnJ,IAAI,CAAC,OAAO;QAAE,OAAO,GAAG,EAAE,CAAC;IAC3B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC7B,OAAO,GAAG,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;KAC3D;SAAM;QACH,OAAO,GAAG,OAAO,CAAC;QAClB,OAAO,GAAG,EAAE,CAAC;KAChB;IAED,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IAClD,MAAM,GAAG,GAAG,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,MAAM,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC;IAC7D,OAAO,GAAG,GAAG,GAAG,GAAG,OAAO,EAAE,CAAC;IAE7B,IAAI,OAAQ,CAAC,KAAK,EAAE;QAChB,mBAAY,CAAC,eAAe,CAAC,OAAQ,CAAC,KAAM,CAAC,CAAC;KACjD;IAED,OAAO,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;AAC9B,CAAC,CAAC;AAEF,oBAAO,CAAC,SAAS,CAAC,KAAK,GAAG,UAAwB,OAAa,EAAE,OAAwB;IACrF,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAC/C,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;IAErD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC/C,CAAC,CAAC;AAEF,MAAM,OAAO,GAAG,oBAAO,CAAC,SAAS,CAAC,IAAI,CAAC;AACvC,oBAAO,CAAC,SAAS,CAAC,IAAI,GAAG,UAAwB,OAAa,EAAE,OAAwB;IACpF,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAC/C,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;IAErD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AAChD,CAAC,CAAC;AAEF,oBAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,oBAAO,CAAC,SAAS,CAAC,OAAO,GAAG,oBAAO,CAAC,SAAS,CAAC,IAAI,GAAG;IAC9E,OAAO,IAAI,CAAC,KAAK,CAAC,yBAAa,CAAyB,CAAC;AAC7D,CAAC,CAAA;AAED,oBAAO,CAAC,SAAS,CAAC,OAAO,GAAG,oBAAO,CAAC,SAAS,CAAC,MAAM,GAAG,oBAAO,CAAC,SAAS,CAAC,OAAO,GAAG;IAC/E,OAAO,IAAI,CAAC,KAAK,CAAC,sBAAU,CAAyB,CAAC;AAC1D,CAAC,CAAA;AAED,oBAAO,CAAC,SAAS,CAAC,IAAI,GAAG;IACrB,OAAO,IAAI,CAAC,KAAK,CAAC,sBAAU,CAAyB,CAAC;AAC1D,CAAC,CAAA;AAED,oBAAO,CAAC,SAAS,CAAC,MAAM,GAAG,UAAwB,KAAK;IACpD,MAAM,EAAC,MAAM,EAAC,GAAG,KAAK,IAAI,qBAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACnD,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAC,KAAK,EAAE,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EAAC,CAAyB,CAAC;AAClJ,CAAC,CAAA;AAED,oBAAO,CAAC,SAAS,CAAC,IAAI,GAAG,EAAE,CAAC;AAE5B,wBAAW,CAAC,SAAS,CAAC,SAAS,GAAG,KAAK,WAA6B,WAAiC;IACjG,MAAM,MAAM,GAAG,CAAC,IAAoC,EAAE,EAAE;QACpD,KAAK,IAAI,CAAC,EAAC,EAAC,EAAE,EAAC,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;YAC5B,IAAI,2BAAe,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;gBAAE,OAAO,IAAI,CAAC;SACvD;QACD,OAAO,KAAK,CAAC;IACjB,CAAC,CAAA;IACD,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACvE,IAAI,CAAC,OAAO;QAAE,OAAO,KAAK,CAAC;IAC3B,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,kBAAW,CAAC,QAAQ,CAAC;IAC3D,QAAQ,MAAM,EAAE;QACZ,KAAK,kBAAW,CAAC,QAAQ;YACrB,OAAO,IAAI,CAAC;QAChB;YACI,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC;KAC7B;AACL,CAAC,CAAA;AAED,iBAAI,CAAC,SAAS,CAAC,SAAS,GAAG,KAAK,WAAsB,WAAmB;IACrE,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACvE,IAAI,CAAC,OAAO;QAAE,OAAO,KAAK,CAAC;IAE3B,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,kBAAW,CAAC,QAAQ,CAAC;IAEzD,IAAI,MAAM,KAAK,kBAAW,CAAC,QAAQ;QAAE,OAAO,IAAI,CAAC;IAEjD,IAAI,MAAM,KAAK,kBAAW,CAAC,SAAS,IAAI,kBAAW,CAAC,KAAK;QAAE,MAAM,GAAG,kBAAW,CAAC,IAAI,CAAC;IAErF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC;IACnC,KAAK,IAAI,CAAC,EAAC,KAAK,CAAC,IAAI,MAAM;QACvB,IAAI,MAAM,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAE,CAAC,SAAS,CAAC,MAAM,CAAC;YAAE,OAAO,IAAI,CAAC;IACzE,OAAO,KAAK,CAAC;AACjB,CAAC,CAAA;AAED,iBAAI,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK;IACzB,MAAM,UAAU,GAA8B,IAAI,uBAAU,EAAE,CAAC;IAC/D,KAAK,IAAI,CAAC,EAAC,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM;QACnC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;YAAE,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IACnE,OAAO,UAAU,CAAC;AACtB,CAAC,CAAA;AAED,sBAAS,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC;IACnC,IAAI,EAAE,IAAW;IACjB,YAAY,EAAE,KAAK;IACnB,QAAQ,EAAE,IAAW;IACrB,YAAY,EAAE,KAAK;CACtB,EAAE;IACC,GAAG,CAAC,MAAM,EAAE,GAAG;QACX,IAAI,GAAG,KAAK,MAAM,EAAE;YAChB,OAAO,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,sBAAU,CAAC;SACzD;QACD,IAAI,GAAG,KAAK,UAAU,EAAE;YACpB,OAAO,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,oBAAQ,CAAC;SAC3D;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IACD,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK;QAClB,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpB,IAAI,GAAG,KAAK,MAAM,EAAE;YAChB,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;SAC9B;QACD,IAAI,GAAG,KAAK,UAAU,EAAE;YACpB,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;SAC9B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ,CAAC,CAAC","sourcesContent":["// This file adds additional functions to Discord.JS prototypes\n\nimport { Collection, RichEmbed, Guild, GuildMember, Message, MessageOptions, User } from 'discord.js';\n\nimport Application from '..';\nimport { AccessLevel, CommandUtils } from './util';\nimport { ROLES, ROLES_INCLUSIVE, SUCCESS_EMOJI, FAIL_EMOJI, BOT_AUTHOR, BOT_ICON } from '../Constants';\nimport { CommandError } from './errors';\n\nconst mentionRegex = /⦗<@\\d+>⦘/g;\n\n/**\n * Preserves or adds the user mention string when editing a message\n * @param message the message to modify\n * @param content the new content, if any\n * @param options the options, if any\n */\nconst update: (message: Message, content?: any, options?: MessageOptions) => {content?: any, options?: MessageOptions} = (message, content, options) => {\n    if (!options) options = {};\n    if (typeof content === \"string\") {\n        content = `${content.length > 0 ? `: ${content}` : ''}`;\n    } else {\n        options = content;\n        content = \"\";\n    }\n\n    const match = message.content.match(mentionRegex);\n    const tag = match && match[0] || `⦗<@${message.author.id}>⦘`;\n    content = `${tag}${content}`;\n\n    if (options!.embed) {\n        CommandUtils.specializeEmbed(options!.embed!);\n    }\n\n    return {content, options};\n};\n\nMessage.prototype.reply = function(this: Message, content?: any, options?: MessageOptions) {\n    const patches = update(this, content, options);\n    content = patches.content, options = patches.options;\n\n    return this.channel.send(content, options);\n};\n\nconst oldEdit = Message.prototype.edit;\nMessage.prototype.edit = function(this: Message, content?: any, options?: MessageOptions) {\n    const patches = update(this, content, options);\n    content = patches.content, options = patches.options;\n\n    return oldEdit.call(this, content, options);\n};\n\nMessage.prototype.complete = Message.prototype.success = Message.prototype.done = function(this: Message) {\n    return this.react(SUCCESS_EMOJI) as any as Promise<void>;\n}\n\nMessage.prototype.warning = Message.prototype.danger = Message.prototype.caution = function(this: Message) {\n    return this.react(FAIL_EMOJI) as any as Promise<void>;\n}\n\nMessage.prototype.fail = function(this: Message) {\n    return this.react(FAIL_EMOJI) as any as Promise<void>;\n}\n\nMessage.prototype.reject = function(this: Message, error) {\n    const {render} = error || CommandError.GENERIC({});\n    return this.reply(typeof render === \"string\" ? render : \"\", {embed: typeof render === \"object\" ? render : undefined}) as any as Promise<void>;\n}\n\nMessage.prototype.data = {};\n\nGuildMember.prototype.hasAccess = async function(this: GuildMember, commandName: string | AccessLevel) {\n    const verify = (role: \"moderator\" | \"admin\" | \"root\") => {\n        for (let [,{id}] of this.roles) {\n            if (ROLES_INCLUSIVE[role].includes(id)) return true;\n        }\n        return false;\n    }\n    const command = this.client.botkit.commandSystem.commands[commandName];\n    if (!command) return false;\n    const access = command.opts.access || AccessLevel.EVERYONE;\n    switch (access) {\n        case AccessLevel.EVERYONE:\n            return true;\n        default:\n            return verify(access);\n    }\n}\n\nUser.prototype.hasAccess = async function(this: User, commandName: string) {\n    const command = this.client.botkit.commandSystem.commands[commandName];\n    if (!command) return false;\n\n    let access = command.opts.access || AccessLevel.EVERYONE;\n\n    if (access === AccessLevel.EVERYONE) return true;\n    \n    if (access === AccessLevel.MODERATOR || AccessLevel.ADMIN) access = AccessLevel.ROOT;\n\n    const guilds = await this.guilds();\n    for (let [,guild] of guilds)\n        if (await guild.members.get(this.id)!.hasAccess(access)) return true;\n    return false;\n}\n\nUser.prototype.guilds = async function(this: User) {\n    const collection: Collection<string, Guild> = new Collection();\n    for (let [,guild] of this.client.guilds)\n        if (guild.members.has(this.id)) collection.set(this.id, guild);\n    return collection;\n}\n\nRichEmbed.prototype.footer = new Proxy({\n    text: null as any,\n    text_mutated: false,\n    icon_url: null as any,\n    icon_mutated: false\n}, {\n    get(target, key) {\n        if (key === \"text\") {\n            return target.text_mutated ? target.text : BOT_AUTHOR;\n        }\n        if (key === \"icon_url\") {\n            return target.icon_mutated ? target.icon_url : BOT_ICON;\n        }\n        return undefined;\n    },\n    set(target, key, value) {\n        target[key] = value;\n        if (key === \"text\") {\n            target.text_mutated = true;\n        }\n        if (key === \"icon_url\") {\n            target.icon_mutated = true;\n        }\n        return true;\n    }\n});"]}