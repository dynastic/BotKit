{"version":3,"file":"api.js","sourceRoot":"/Users/ericrabil/eric.git/BotKit/src/","sources":["commands/api.ts"],"names":[],"mappings":"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","sourcesContent":["import { Collection, Guild, GuildMember, Message, MessageOptions, User } from 'discord.js';\n\nimport Application from '..';\nimport { AccessLevel, specializeEmbed } from './util';\nimport { ROLES } from '../Constants';\n\nconst mentionRegex = /⦗<@\\d+>⦘/g;\n\n/**\n * Preserves or adds the user mention string when editing a message\n * @param message the message to modify\n * @param content the new content, if any\n * @param options the options, if any\n */\nconst update: (message: Message, content?: any, options?: MessageOptions) => {content?: any, options?: MessageOptions} = (message, content, options) => {\n    if (!options) options = {};\n    if (typeof content === \"string\") {\n        content = `${content.length > 0 ? `: ${content}` : ''}`;\n    } else {\n        options = content;\n        content = \"\";\n    }\n\n    const match = message.content.match(mentionRegex);\n    const tag = match && match[0] || `⦗<@${message.author.id}>⦘`;\n    content = `${tag}${content}`;\n\n    if (options!.embed) {\n        specializeEmbed(options!.embed!);\n    }\n\n    return {content, options};\n};\n\nMessage.prototype.reply = function(this: Message, content?: any, options?: MessageOptions) {\n    const patches = update(this, content, options);\n    content = patches.content, options = patches.options;\n\n    return this.channel.send(content, options);\n};\n\nconst oldEdit = Message.prototype.edit;\nMessage.prototype.edit = function(this: Message, content?: any, options?: MessageOptions) {\n    const patches = update(this, content, options);\n    content = patches.content, options = patches.options;\n\n    return oldEdit.call(this, content, options);\n};\n\nconst roles = ROLES;\n\nconst moderator: {[key: string]: boolean} = {}, admin: {[key: string]: boolean} = {}, root: {[key: string]: boolean} = {};\nfor (let rootID of roles.root) moderator[rootID] = admin[rootID] = root[rootID] = true;\nfor (let adminID of roles.admin) moderator[adminID] = admin[adminID] = true;\nfor (let moderatorID of roles.moderator) moderator[moderatorID] = true;\nconst roleList = {moderator, admin, root};\n\nGuildMember.prototype.hasAccess = async function(this: GuildMember, commandName: string | AccessLevel) {\n    const verify = (role: \"moderator\" | \"admin\" | \"root\") => {\n        for (let [,{id}] of this.roles) {\n            if (roleList[role][id]) return true;\n        }\n        return false;\n    }\n    if (AccessLevel[commandName.toUpperCase()]) {\n        const access = AccessLevel[commandName.toUpperCase()];\n        if (access === AccessLevel.EVERYONE) return true;\n        return verify(access.toLowerCase());\n    }\n    const command = Application.singleton.commandSystem.commands[commandName];\n    if (!command) return false;\n    const access = command.opts.access || AccessLevel.EVERYONE;\n    switch (access) {\n        case AccessLevel.EVERYONE:\n            return true;\n        default:\n            return verify(access);\n    }\n}\n\nUser.prototype.hasAccess = async function(this: User, commandName: string) {\n    const command = Application.singleton.commandSystem.commands[commandName];\n    if (!command) return false;\n\n    let access = command.opts.access || AccessLevel.EVERYONE;\n\n    if (access === AccessLevel.EVERYONE) return true;\n    \n    if (access === AccessLevel.MODERATOR || AccessLevel.ADMIN) access = AccessLevel.ROOT;\n\n    const guilds = await this.guilds();\n    for (let [,guild] of guilds)\n        if (await guild.members.get(this.id)!.hasAccess(access)) return true;\n    return false;\n}\n\nUser.prototype.guilds = async function(this: User) {\n    const collection: Collection<string, Guild> = new Collection();\n    for (let [,guild] of this.client.guilds)\n        if (guild.members.has(this.id)) collection.set(this.id, guild);\n    return collection;\n}"]}