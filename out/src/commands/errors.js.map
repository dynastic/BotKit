{"version":3,"file":"errors.js","sourceRoot":"./src/","sources":["src/commands/errors.ts"],"names":[],"mappings":"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","sourcesContent":["import { RichEmbed } from \"discord.js\";\nimport Constants from \"../Constants\";\nimport { CommandUtils } from \"./util\";\n\nexport interface CommandErrorOptions {\n    message: string;\n    title?: string;\n    code?: string;\n    tracking?: string;\n    errorPrefix?: boolean;\n    render?: Constants.ErrorFormat;\n    fields?: {\n        [key: string]: string;\n    };\n}\n\n/**\n * An error class that can be thrown by commands and guards which are rendered to the client\n */\nexport class CommandError {\n    public constructor(private options: CommandErrorOptions) {\n        options.title = options.title || \"Something went wrong\";\n        if (options.errorPrefix !== false) {\n            options.message = `${Constants.ERROR_PREFIX} ${options.message}`;\n        }\n    }\n\n    /**\n     * An embed render of the error\n     */\n    public get embed(): RichEmbed {\n        const embed = new RichEmbed();\n        embed.setTitle(this.options.title);\n        embed.setDescription(this.options.message);\n        embed.setColor(Constants.COLORS.DANGER);\n        CommandUtils.specializeEmbed(embed);\n        if (this.options.code || this.options.tracking) {\n            embed.setAuthor(`${this.options.code ? `${this.options.code} | ` : ''}${this.options.tracking ? `Error ID: ${this.options.tracking}` : ''}`);\n        }\n        if (this.options.fields) {\n            for (let field in this.options.fields) {\n                embed.addField(field, this.options.fields[field], true);\n            }\n        }\n        return embed;\n    }\n\n    /**\n     * A plaintext render of the error\n     */\n    public get text(): string {\n        let message = `**${this.options.title}**\\n${this.options.message}`;\n        if (this.options.code || this.options.tracking) {\n            message += `\\n*`;\n            if (this.options.code) message += `${this.options.code}`;\n            if (this.options.code && this.options.tracking) message += \" | \";\n            if (this.options.tracking) message += `Error ID: ${this.options.tracking}`;\n        }\n        if (this.options.fields) {\n            message += \"```\";\n            \n            for (let field in this.options.fields) {\n                const fieldText = this.options.fields[field];\n                message += `\\n${field}\\n${''.padStart(field.length, '-')}\\n${fieldText}`;\n            }\n\n            message += \"\\n```\";\n        }\n        return message;\n    }\n\n    /**\n     * Determines which render to return based on the options or constant\n     */\n    public get render(): string | RichEmbed {\n        return (this.options.render || Constants.ERROR_RENDER_FORMAT) === Constants.ErrorFormat.EMBED ? this.embed : this.text;\n    }\n\n    public static get FORBIDDEN(): CommandError {\n        return new CommandError({\n            message: `You do not have the necessary permissions to do that.`,\n            title: \"Missing access\"\n        });\n    }\n\n    public static GENERIC({tracking, code}: {tracking?: string, code?: string}): CommandError {\n        return new CommandError({\n            message: `An error occurred while processing your request. Please try again later.`,\n            tracking,\n            code\n        });\n    }\n\n    public static NOT_FOUND(message: string): CommandError {\n        return new CommandError({\n            title: \"Not Found\",\n            message\n        });\n    }\n\n    public static BOT_MISSING_PERMISSIONS({tracking, permissions}: {tracking?: string, permissions?: string[]}): CommandError {\n        return new CommandError({\n            message: `I can't do that right now because I'm missing ${permissions ? `the following permissions: \\n - ${permissions.join('\\n - ')}` : 'the necessary permissions'}`,\n            title: \"Missing permissions\",\n            tracking\n        });\n    }\n}"]}