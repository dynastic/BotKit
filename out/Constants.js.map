{"version":3,"file":"Constants.js","sourceRoot":"./src/","sources":["Constants.ts"],"names":[],"mappings":";;AAEW,QAAA,aAAa,GAAG,IAAI,CAAC;AAErB,QAAA,UAAU,GAAG,GAAG,CAAC;AAEjB,QAAA,aAAa,GAAG,GAAG,CAAC;AAEpB,QAAA,YAAY,GAAG,IAAI,CAAC;AAEpB,QAAA,cAAc,GAAG,GAAG,CAAC;AAErB,QAAA,cAAc,GAAG,oCAAoC,CAAC;AAEtD,QAAA,QAAQ,GAAG,kDAAkD,CAAC;AAE9D,QAAA,UAAU,GAAG,UAAU,CAAC;AAExB,QAAA,QAAQ,GAAG,oBAAoB,CAAC;AAEhC,QAAA,MAAM,GAAG;IAChB,MAAM,EAAE,QAAQ;CACnB,CAAC;AAEF,IAAY,WAEX;AAFD,WAAY,WAAW;IACnB,+CAAK,CAAA;IAAE,6CAAI,CAAA;AACf,CAAC,EAFW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAEtB;AAEU,QAAA,mBAAmB,GAAgB,WAAW,CAAC,KAAK,CAAC;AAErD,QAAA,KAAK,GAAgB,EAAC,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;AAE1D,QAAA,eAAe,GAAgB,EAAC,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;AAElE,QAAA,YAAY,GAAG,YAAY,CAAC;AAqBzC;;GAEG;AACH,SAAS,yBAAyB;IAC9B,MAAM,SAAS,GAA6B,EAAE,EAAE,KAAK,GAA6B,EAAE,EAAE,IAAI,GAA6B,EAAE,CAAC;IAC1H,KAAK,IAAI,MAAM,IAAI,aAAK,CAAC,IAAI;QAAE,SAAS,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IACvF,KAAK,IAAI,OAAO,IAAI,aAAK,CAAC,KAAK;QAAE,SAAS,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;IAC5E,KAAK,IAAI,WAAW,IAAI,aAAK,CAAC,SAAS;QAAE,SAAS,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IACvE,uBAAe,GAAG,EAAC,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC;AAC9G,CAAC;AAED;;;GAGG;AACH,SAAgB,YAAY,CAAC,OAAoC;IAC7D,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,KAAK,IAAI,GAAG,IAAI,OAAO,EAAE;QACrB,MAAM,IAAI,WAAW,GAAG,cAAc,GAAG,eAAe,GAAG,GAAG,CAAC;KAClE;IACD,IAAI,CAAC,MAAM,CAAC,CAAC;IACb,IAAI,OAAO,CAAC,KAAK,EAAE;QACf,yBAAyB,EAAE,CAAC;KAC/B;AACL,CAAC;AATD,oCASC","sourcesContent":["import { RoleOptions } from \".\";\n\nexport let SUCCESS_EMOJI = 'üÜó';\n\nexport let FAIL_EMOJI = '‚ùå';\n\nexport let WARNING_EMOJI = '‚ö†';\n\nexport let DELETE_EMOJI = 'üóë';\n\nexport let COMMAND_PREFIX = '*';\n\nexport let ARGUMENT_REGEX = /[^'\"\\s]+|(?:[\"'])([^'\"]+)(?:[\"'])/g;\n\nexport let BOT_ICON = \"https://assets.dynastic.co/brand/img/icon-64.png\";\n\nexport let BOT_AUTHOR = \"Dynastic\";\n\nexport let TEMP_DIR = \"/tmp/bot-downloads\";\n\nexport let COLORS = {\n    DANGER: 0xff895e\n};\n\nexport enum ErrorFormat {\n    EMBED, TEXT\n}\n\nexport let ERROR_RENDER_FORMAT: ErrorFormat = ErrorFormat.EMBED;\n\nexport let ROLES: RoleOptions = {moderator: [], admin: [], root: []};\n\nexport let ROLES_INCLUSIVE: RoleOptions = {moderator: [], admin: [], root: []};\n\nexport const ERROR_PREFIX = \"**Uh oh!**\";\n\nexport interface PatchableConstants {\n    SUCCESS_EMOJI: string;\n    FAIL_EMOJI: string;\n    WARNING_EMOJI: string;\n    DELETE_EMOJI: string;\n    COMMAND_PREFIX: string;\n    ARGUMENT_REGEX: string;\n    BOT_ICON: string;\n    BOT_AUTHOR: string;\n    TEMP_DIR: string;\n    COLORS: {\n        DANGER: number;\n        [key: string]: number;\n    };\n    ERROR_RENDER_FORMAT: ErrorFormat;\n    ROLES: RoleOptions;\n    ERROR_PREFIX: string;\n}\n\n/**\n * Recomputes the inheritence-based role list\n */\nfunction recalculateInclusiveRoles() {\n    const moderator: {[key: string]: boolean} = {}, admin: {[key: string]: boolean} = {}, root: {[key: string]: boolean} = {};\n    for (let rootID of ROLES.root) moderator[rootID] = admin[rootID] = root[rootID] = true;\n    for (let adminID of ROLES.admin) moderator[adminID] = admin[adminID] = true;\n    for (let moderatorID of ROLES.moderator) moderator[moderatorID] = true;\n    ROLES_INCLUSIVE = {moderator: Object.keys(moderator), admin: Object.keys(admin), root: Object.keys(root)};\n}\n\n/**\n * Applies patches to BotKit constants\n * @param patches the patches to apply\n */\nexport function applyPatches(patches: Partial<PatchableConstants>) {\n    let script = \"\";\n    for (let key in patches) {\n        script += `exports.${key} = patches.${key} || exports.${key};`;\n    }\n    eval(script);\n    if (patches.ROLES) {\n        recalculateInclusiveRoles();\n    }\n}"]}